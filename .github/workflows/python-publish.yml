name: Upload Python Package

on:
  workflow_run:
    workflows: ["CI/CD"]
    types:
      - completed

permissions:
  contents: read

jobs:
  release-build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: ["3.8", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git git-lfs python3-setuptools python3-venv graphviz cmake
          git lfs install
          git lfs pull
          python -m pip install --upgrade pip setuptools flake8 build
          python -m pip install -r requirements.txt
          python3 -m build
          mkdir -p dist
          cp dist/*.whl dist/

      - name: Install and build (macOS)
        if: matrix.os == 'macOS-latest'
        run: |
          brew update
          brew install git git-lfs python3 cmake
          git lfs install
          git lfs pull
          python3 -m pip install --upgrade pip setuptools flake8 cibuildwheel delocate
          python3 -m pip install -r requirements.txt
          PYTHON_VERSION=$(python3 -c "import sys; print(f'cp{sys.version_info.major}{sys.version_info.minor}')")
          export ARCHFLAGS="-arch arm64"
          export CMAKE_OSX_ARCHITECTURES=arm64
          export CIBW_BUILD="${PYTHON_VERSION}-macosx_*"
          python3 -m cibuildwheel --platform macos
          mkdir -p dist
          cp wheelhouse/*.whl dist/

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    needs: release-build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/