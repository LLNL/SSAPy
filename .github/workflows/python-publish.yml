# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git git-lfs python3 python3-setuptools python3-venv graphviz cmake
          git submodule update --init --recursive
          git lfs install
          git lfs pull
          python -m pip install --upgrade pip setuptools flake8
          python -m pip install -r requirements.txt
          # install checked out SSAPy
          python setup.py build
          python setup.py install
          python -m pip list
      - name: Install dependencies (MacOS)
        if: matrix.os == 'macOS-latest'
        run: |
          # Update Homebrew and install dependencies
          brew update
          brew install git git-lfs python3 graphviz cmake
      
          # Initialize and update submodules
          git submodule update --init --recursive
      
          # Install Git LFS and pull LFS objects
          git lfs install
          git lfs pull
      
          # Upgrade pip and install Python dependencies
          python3 -m pip install --upgrade pip setuptools flake8
          python3 -m pip install -r requirements.txt
      
          # Build and install the project
          python3 setup.py build
          python3 setup.py install
      
          # List installed Python packages
          python3 -m pip list
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
